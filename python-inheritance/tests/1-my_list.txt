Module: "my_list"
====================

Using: "print_sorted"
--------------------

Import MyList from the my_list module:
    >>> MyList = __import__('1-my_list').MyList

Now to use it:

    Basic sort:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]
    >>> print(my_list)
    [1, 4, 2, 3, 5]

    Sorting a list that contains an element that is a str:
    >>> my_list = MyList()
    >>> my_list.append("aint it")
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    Traceback (most recent call last):
    ...
    TypeError: '<' not supported between instances of 'int' and 'str'

    List is empty:
    >>> my_list = MyList()
    >>> print(my_list)
    []
    >>> my_list.print_sorted()
    []
    >>> print(my_list)
    []

    List contains only the same integer:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(1)
    >>> my_list.append(1)
    >>> my_list.append(1)
    >>> my_list.append(1)
    >>> my_list.print_sorted()
    [1, 1, 1, 1, 1]
    >>> print(my_list)
    [1, 1, 1, 1, 1]

    List contains negative integers:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(-3)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [-3, 1, 2, 4, 5]
    >>> print(my_list)
    [1, 4, 2, -3, 5]

    There is only one:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.print_sorted()
    [1]
    >>> print(my_list)
    [1]

    The list contains elements that are float:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2.5)
    >>> my_list.append(1.5)
    >>> my_list.print_sorted()
    [1, 1.5, 2.5, 4]
    >>> print(my_list)
    [1, 4, 2.5, 1.5]