Module: "matrix_divided"
========================

Using: "matrix_divided"
------------------------

Import "matrix_divided" from "matrix_divided" module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now to use it:

    Dividing valid matrix (list of lists) by an integer:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> div = 3
    >>> matrix_divided(matrix, div)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    Matrix contains elements other than int/float:
    >>> matrix = [["string", 2, 3], [4, 5, 6]]
    >>> div = 3
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    Dividing a matrix where rows are not the same size:
    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> div = 3
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    Dividing a matrix where div is not an int:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> div = "string"
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    Dividing a matrix by div = 0:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> div = 0
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    Dividing a matrix by infinity:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> div = float('inf')
    >>> matrix_divided(matrix, div)
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    Missing an argument:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    No arguments:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'